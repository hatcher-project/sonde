{"version":3,"sources":["src/js/formatDuration.js","src/js/makeElement.js","src/js/Header.js","node_modules/@azasypkin/event-dispatcher/bin/event-dispatcher.es2016.js","src/js/Timeline.js","src/js/Messages.js","src/js/Bar.js","src/js/index.js"],"names":["formatDuration","ms","toFixed","makeElement","tag","content","classList","attr","let","e","document","createElement","innerHTML","classes","split","i","length","add","setAttribute","Header","bar","self","this","root","logo","appendChild","reportSelect","selectWraper","addEventListener","showReport","value","itemList","toggle","on","report","option","Option","label","reports","options","index","prototype","lastChild","this$1","removeChild","addPanelTab","panel","tab","children","opened","querySelectorAll","remove","open","const","assertValidEventName","eventName","Error","assertValidHandler","handler","assertAllowedEventName","allowedEvents","indexOf","p","Object","freeze","Symbol","listeners","EventDispatcher","Array","isArray","Map","handlers","get","Set","set","once","parameters","off","call","delete","size","offAll","clear","emit","forEach","error","console","hasListeners","has","mixin","target","dispatcher","method","bind","Timeline","header","typeSelector","filterType","duration","data","typeList","profiles","profile","profileTypeName","profileTypes","hasOwnProperty","type","profileType","li","wrapper","localDuration","stop","start","timeBar","timeBarWrapper","startPct","durationPct","style","color","unfoldable","keys","dataDetail","table","row","stackTrace","stackTracePre","trace","i$1","name","element","getAttribute","Messages","messages","bubbleCount","outerHTML","message","text","Bar","body","timeline","default","close","addProfileType","addReport","push"],"mappings":"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","file":"index.js","sourcesContent":["export default function formatDuration(ms)\n{\n    if (ms < 1000) {\n        return ms  + '&micro;s';\n    } else if (ms < 1000000) {\n        return (ms / 1000).toFixed(2) + 'ms';\n    }\n    return (ms / 1000000).toFixed(2) + 's';\n}\n","export default function makeElement(tag, content, classList, attr)\n{\n\n    let e = document.createElement(tag);\n\n    if (content) {\n        e.innerHTML = content;\n    }\n\n    if (classList) {\n\n        let classes = classList.split(' ');\n\n        for(let i = 0; i<classes.length; i++){\n            e.classList.add(classes[i]);\n        }\n\n    }\n\n    if (attr) {\n        for (let i in attr) {\n            e.setAttribute(i, attr[i]);\n        }\n    }\n\n    return e;\n\n}\n","import formatDuration from './formatDuration'\nimport makeElement from './makeElement'\n\nexport default class Header{\n\n    constructor(bar){\n        var self = this;\n\n        this.bar = bar;\n        this.root = document.createElement('header');\n\n        var logo = document.createElement('div');\n        this.root.appendChild(logo);\n        logo.innerHTML = 'logo';\n\n        this.reportSelect = document.createElement('select');\n        var selectWraper = document.createElement('div');\n        selectWraper.classList.add('phpsonde-request-select');\n        selectWraper.appendChild(this.reportSelect);\n        this.root.appendChild(selectWraper);\n\n\n\n        this.reportSelect.addEventListener('change', function () {\n            bar.showReport(this.value);\n            // Report refresh is handled by bar.on('showReport', ...) see below\n        });\n\n        this.itemList = document.createElement('ul');\n        this.root.appendChild(this.itemList);\n\n\n        logo.addEventListener('click', function () {\n            self.bar.toggle();\n        });\n\n        bar.on('reportAdded', function (report) {\n            let option = new Option(report.label, bar.reports.length - 1);\n            self.reportSelect.options[self.reportSelect.options.length] = option;\n        });\n\n        bar.on('showReport', function (index) {\n            self.showReport(bar.reports[index])\n        });\n    }\n\n    showReport(report){\n        while (this.itemList.lastChild) {\n            this.itemList.removeChild(this.itemList.lastChild);\n        }\n    }\n\n\n    addPanelTab(label, panel){\n        let tab = makeElement('li', label, 'phpsonde-panel-tab');\n        this.itemList.appendChild(tab);\n\n        var self = this;\n\n        if(this.itemList.children.length === 1){\n            tab.classList.add('phpsonde-open');\n            panel.classList.add('phpsonde-open');\n        }\n\n        tab.addEventListener('click', function(){\n            var opened = self.bar.root.querySelectorAll('.phpsonde-panel-tab.phpsonde-open, .phpsonde-panel.phpsonde-open');\n\n            for(let i = 0; i < opened.length; i++){\n                opened[i].classList.remove('phpsonde-open');\n            }\n\n            tab.classList.add('phpsonde-open');\n            panel.classList.add('phpsonde-open');\n\n\n            self.bar.open();\n        });\n    }\n\n\n}\n","'use strict';\n\nconst assertValidEventName = function(eventName) {\n  if (!eventName || typeof eventName !== 'string') {\n    throw new Error('Event name should be a valid non-empty string!');\n  }\n};\n\nconst assertValidHandler = function(handler) {\n  if (typeof handler !== 'function') {\n    throw new Error('Handler should be a function!');\n  }\n};\n\nconst assertAllowedEventName = function(allowedEvents, eventName) {\n  if (allowedEvents && allowedEvents.indexOf(eventName) < 0) {\n    throw new Error(`Event \"${eventName}\" is not allowed!`);\n  }\n};\n\nconst p = Object.freeze({\n  allowedEvents: Symbol('allowedEvents'),\n  listeners: Symbol('listeners')\n});\n\nexport default class EventDispatcher {\n  constructor(allowedEvents) {\n    if (typeof allowedEvents !== 'undefined' && !Array.isArray(allowedEvents)) {\n      throw new Error('Allowed events should be a valid array of strings!');\n    }\n\n    this[p.listeners] = new Map();\n    this[p.allowedEvents] = allowedEvents;\n  }\n\n  /**\n   * Registers listener function to be executed once event occurs.\n   *\n   * @param {string} eventName Name of the event to listen for.\n   * @param {function} handler Handler to be executed once event occurs.\n   */\n  on(eventName, handler) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n    assertValidHandler(handler);\n\n    let handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      handlers = new Set();\n      this[p.listeners].set(eventName, handlers);\n    }\n\n    // Set.add ignores handler if it has been already registered.\n    handlers.add(handler);\n  }\n\n  /**\n   * Registers listener function to be executed only first time when event\n   * occurs.\n   *\n   * @param {string} eventName Name of the event to listen for.\n   * @param {function} handler Handler to be executed once event occurs.\n   */\n  once(eventName, handler) {\n    assertValidHandler(handler);\n\n    const once = (parameters) => {\n      this.off(eventName, once);\n\n      handler.call(this, parameters);\n    };\n\n    this.on(eventName, once);\n  }\n\n  /**\n   * Removes registered listener for the specified event.\n   *\n   * @param {string} eventName Name of the event to remove listener for.\n   * @param {function} handler Handler to remove, so it won't be executed\n   * next time event occurs.\n   */\n  off(eventName, handler) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n    assertValidHandler(handler);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.delete(handler);\n\n    if (!handlers.size) {\n      this[p.listeners].delete(eventName);\n    }\n  }\n\n  /**\n   * Removes all registered listeners for the specified event.\n   *\n   * @param {string=} eventName Name of the event to remove all listeners for.\n   */\n  offAll(eventName) {\n    if (typeof eventName === 'undefined') {\n      this[p.listeners].clear();\n      return;\n    }\n\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.clear();\n\n    this[p.listeners].delete(eventName);\n  }\n\n  /**\n   * Emits specified event so that all registered handlers will be called\n   * with the specified parameters.\n   *\n   * @param {string} eventName Name of the event to call handlers for.\n   * @param {Object=} parameters Optional parameters that will be passed to\n   * every registered handler.\n   */\n  emit(eventName, parameters) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.forEach((handler) => {\n      try {\n        handler.call(this, parameters);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  }\n\n  /**\n   * Checks if there are any listeners that listen for the specified event.\n   *\n   * @param {string} eventName Name of the event to check listeners for.\n   * @returns {boolean}\n   */\n  hasListeners(eventName) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    return this[p.listeners].has(eventName);\n  }\n\n  /**\n   * Mixes dispatcher methods into target object.\n   * @param {Object} target Object to mix dispatcher methods into.\n   * @param {Array.<string>?} allowedEvents Optional list of the allowed event\n   * names that can be emitted and listened for.\n   * @returns {Object} Target object with added dispatcher methods.\n   */\n  static mixin(target, allowedEvents) {\n    if (!target || typeof target !== 'object') {\n      throw new Error('Object to mix into should be valid object!');\n    }\n\n    if (typeof allowedEvents !== 'undefined' && !Array.isArray(allowedEvents)) {\n      throw new Error('Allowed events should be a valid array of strings!');\n    }\n\n    const dispatcher = new EventDispatcher(allowedEvents);\n    ['on', 'once', 'off', 'offAll', 'emit', 'hasListeners'].forEach((method) => {\n      if (typeof target[method] !== 'undefined') {\n        throw new Error(`Object to mix into already has \"${method}\" property defined!`);\n      }\n\n      if (method !== 'constructor') {\n        target[method] = dispatcher[method].bind(dispatcher);\n      }\n    }, dispatcher);\n\n    return target;\n  }\n}\n","import formatDuration from './formatDuration'\nimport makeElement from './makeElement'\n\nexport default class Timeline{\n\n    constructor(bar){\n\n        var self = this;\n\n        this.bar = bar;\n\n        this.root = makeElement('div', null, 'phpsonde-panel phpsonde-timeline-panel');\n\n        this.header = makeElement('header', 'Show ');\n        this.root.appendChild(this.header);\n\n        this.typeSelector = document.createElement('select');\n        this.header.appendChild(this.typeSelector);\n\n        this.typeSelector.addEventListener('change', function () {\n            self.filterType(this.value);\n        });\n\n        this.itemList = document.createElement('ul');\n        this.root.appendChild(this.itemList);\n\n        bar.on('showReport', function (index) {\n            self.showReport(bar.reports[index])\n        });\n\n    }\n\n    showReport(report){\n        while (this.itemList.lastChild) {\n            this.itemList.removeChild(this.itemList.lastChild);\n        }\n\n        var duration = report.data.duration;\n\n        if (!duration) {\n            // TODO: calculate duration from items\n            throw \"No valid duration for profile\"\n        }\n\n        this.bar.header.addPanelTab(formatDuration(duration), this.root);\n\n        let typeList = {};\n\n        for (let i = 0; i<report.data.profiles.length; i++) {\n            let profile = report.data.profiles[i];\n            let profileTypeName = this.bar.profileTypes.hasOwnProperty(profile.type) ? profile.type : 'default';\n            let profileType =  this.bar.profileTypes[profileTypeName];\n\n            if (!typeList.hasOwnProperty(profile.type)) {\n                typeList[profile.type] = profileType.label || profile.type;\n            }\n\n            let li = document.createElement('li');\n            li.setAttribute('data-phpsonde-type', profile.type);\n\n            let wrapper = document.createElement('div');\n            li.appendChild(wrapper);\n            wrapper.classList.add('phpsonde-summary');\n\n            // Label\n            let label = document.createElement('div');\n            label.classList.add('phpsonde-label');\n            wrapper.appendChild(label);\n            label.innerHTML = profileType.label || profile.type;\n\n            // Duration\n            let localDuration = document.createElement('div');\n            localDuration.classList.add('phpsonde-duration');\n            localDuration.innerHTML = formatDuration(profile.stop - profile.start);\n            wrapper.appendChild(localDuration);\n\n            // Timebar\n            let timeBar = document.createElement('div');\n            // Timebar wrapper\n            let timeBarWrapper = document.createElement('div');\n            timeBarWrapper.classList.add('phpsonde-timebar');\n            timeBarWrapper.appendChild(timeBar);\n            wrapper.appendChild(timeBarWrapper);\n\n            // Timebar position\n            let startPct = 100 * profile.start / duration;\n            let durationPct = 100 * (profile.stop - profile.start) / duration;\n            timeBar.style['margin-left'] = startPct + '%';\n\n            if (durationPct > 0) {\n                timeBar.style['width'] = durationPct + '%';\n            } else {\n                timeBar.style['width'] = '1px';\n            }\n\n            // Timebar color\n            if (profileType.color) {\n                timeBar.style['background-color'] = profileType.color;\n            }\n\n\n            // Unfoldable area\n            let unfoldable = document.createElement('div');\n            unfoldable.classList.add('phpsonde-details');\n            li.appendChild(unfoldable);\n\n            // Data Details\n            if (profile.data && Object.keys(profile.data).length > 0) {\n                let dataDetail = makeElement('div', null, 'phpsonde-data-details');\n                dataDetail.appendChild(makeElement('h3', 'Details'));\n                unfoldable.appendChild(dataDetail);\n\n                let table = makeElement('table');\n                dataDetail.appendChild(table);\n                for (let i in profile.data) {\n                    let row = makeElement('tr');\n                    table.appendChild(row);\n\n                    row.appendChild(makeElement('td', i));\n                    row.appendChild(makeElement('td', profile.data[i]));\n                }\n            }\n\n            // Stack trace\n            let stackTrace = document.createElement('div');\n            stackTrace.classList.add('phpsonde-stacktrace');\n            let stackTracePre = document.createElement('pre');\n            stackTracePre.innerHTML = profile.trace;\n            stackTrace.appendChild(makeElement('h3', 'Stack Trace'));\n            stackTrace.appendChild(stackTracePre);\n            unfoldable.appendChild(stackTrace);\n\n\n\n\n            // Unfold on click\n            wrapper.addEventListener('click', function () {\n                unfoldable.classList.toggle('phpsonde-open');\n            });\n\n\n            this.itemList.appendChild(li);\n        }\n\n        while (this.typeSelector.options.length) {\n            this.typeSelector.options.remove(0);\n        }\n\n        let option = new Option('All', -1);\n        this.typeSelector.options[0] = option;\n\n        for (var i in typeList) {\n            let option = new Option(typeList[i], i);\n            this.typeSelector.options[this.typeSelector.options.length] = option;\n        }\n\n    }\n\n    filterType(name){\n\n        if (name == -1) {\n            for (let i = 0; i < this.itemList.children.length; i++) {\n                this.itemList.children[i].classList.remove('phpsonde-hidden');\n            }\n        } else {\n            for (let i = 0; i < this.itemList.children.length; i++) {\n                let element = this.itemList.children[i];\n                if (element.getAttribute('data-phpsonde-type') === name) {\n                    this.itemList.children[i].classList.remove('phpsonde-hidden');\n                } else {\n                    this.itemList.children[i].classList.add('phpsonde-hidden');\n                }\n            }\n        }\n\n    }\n\n}\n","import makeElement from './makeElement'\n\nexport default class Messages{\n\n    constructor(bar){\n\n        var self = this;\n\n        this.bar = bar;\n\n        this.root = makeElement('div', '', 'phpsonde-panel phpsonde-messages-panel');\n        this.itemList = makeElement('ul');\n\n        this.root.appendChild(this.itemList);\n\n        bar.on('showReport', function (index) {\n            self.showReport(bar.reports[index])\n        });\n\n    }\n\n    showReport(report){\n        while (this.itemList.lastChild) {\n            this.itemList.removeChild(this.itemList.lastChild);\n        }\n\n\n        var messages = report.data.messages;\n\n\n        if (!messages) {\n            // TODO: calculate duration from items\n            return;\n        }\n\n        let bubbleCount = makeElement('span', messages.length, 'phpsonde-bubble');\n        this.bar.header.addPanelTab('messages ' + bubbleCount.outerHTML, this.root);\n\n        for (let i = 0; i<messages.length; i++) {\n            let message = messages[i];\n\n            let li = makeElement('li', '&rsaquo; ' +  message.text, 'bar');\n            this.itemList.appendChild(li);\n        }\n\n    }\n\n}\n","import Header from './Header'\nimport EventDispatcher from '../../node_modules/@azasypkin/event-dispatcher/bin/event-dispatcher.es2016';\nimport Timeline from './Timeline'\nimport Messages from './Messages'\n\nclass Bar {\n\n    constructor(){\n\n        this.root = document.createElement('div');\n        this.root.classList.add('phpsonde');\n\n        // Header\n        this.header = new Header(this);\n        this.root.appendChild(this.header.root);\n\n        // Body\n        this.body = document.createElement('div');\n        this.body.classList.add('phpsonde-body');\n        this.root.appendChild(this.body);\n\n        // Timeline\n        this.timeline = new Timeline(this);\n        this.body.appendChild(this.timeline.root);\n\n        // Messages\n        this.messages = new Messages(this);\n        this.body.appendChild(this.messages.root);\n\n        // Add to dom\n        document.body.appendChild(this.root);\n\n        // Default values\n        this.reports = [];\n        this.profileTypes = {\n            'default': {\n                color: '#AAA'\n            }\n        };\n    }\n\n    open(){\n        this.root.classList.add('phpsonde-open');\n    }\n\n    close(){\n        this.root.classList.remove('phpsonde-open');\n    }\n\n    toggle(){\n        this.root.classList.toggle('phpsonde-open');\n    }\n\n    addProfileType(name, data){\n        this.profileTypes[name] = data;\n    }\n\n\n    addReport(label, data){\n\n        let report = {\n            label,\n            data\n        };\n\n        this.reports.push(report);\n\n        this.emit('reportAdded', report);\n\n        if (this.reports.length === 1) {\n            this.showReport(0);\n        }\n\n    }\n\n    showReport(index){\n        this.emit('showReport', index);\n    }\n\n}\n\nEventDispatcher.mixin(Bar.prototype);\n\n\nexport default Bar;\n","import Bar from './Bar';\n\nexport default {\n    Bar\n};\n"]}