{"version":3,"sources":["src/js/formatDuration.js","src/js/makeElement.js","src/js/onXhrCompletes.js","src/js/Header.js","node_modules/@azasypkin/event-dispatcher/bin/event-dispatcher.es2016.js","src/js/Timeline.js","src/js/Messages.js","src/js/Bar.js","src/js/index.js"],"names":["formatDuration","ms","toFixed","makeElement","tag","content","classList","attr","let","e","document","createElement","innerHTML","classes","split","i","length","add","setAttribute","onXhrCompletes","handler","xhrHandlers","defaultXhr","XMLHttpRequest","prototype","open","self","this","addEventListener","readyState","DONE","apply","arguments","push","Header","bar","root","logo","appendChild","reportSelect","selectWraper","showReport","value","itemList","toggle","on","report","option","Option","label","reports","options","index","lastChild","this$1","removeChild","addPanelTab","panel","tab","children","opened","querySelectorAll","remove","const","assertValidEventName","eventName","Error","assertValidHandler","assertAllowedEventName","allowedEvents","indexOf","p","Object","freeze","Symbol","listeners","EventDispatcher","Array","isArray","Map","handlers","get","Set","set","once","parameters","off","call","delete","size","offAll","clear","emit","forEach","error","console","hasListeners","has","mixin","target","dispatcher","method","bind","Timeline","header","typeSelector","filterType","duration","data","typeList","profiles","profile","profileTypeName","profileTypes","hasOwnProperty","type","profileType","li","wrapper","localDuration","stop","start","timeBar","timeBarWrapper","startPct","durationPct","style","color","unfoldable","keys","dataDetail","table","row","stackTrace","stackTracePre","trace","i$1","name","element","getAttribute","Messages","messages","bubbleCount","outerHTML","message","text","Bar","body","timeline","default","close","addProfileType","addReport","listenForXhrReports","xhr","getResponseHeader","chunk","headerName","atob","JSON","parse","reportBundle"],"mappings":"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","file":"index.js","sourcesContent":["export default function formatDuration(ms)\n{\n    if (ms < 1000) {\n        return ms  + '&micro;s';\n    } else if (ms < 1000000) {\n        return (ms / 1000).toFixed(2) + 'ms';\n    }\n    return (ms / 1000000).toFixed(2) + 's';\n}\n","export default function makeElement(tag, content, classList, attr)\n{\n\n    let e = document.createElement(tag);\n\n    if (content) {\n        e.innerHTML = content;\n    }\n\n    if (classList) {\n\n        let classes = classList.split(' ');\n\n        for(let i = 0; i<classes.length; i++){\n            e.classList.add(classes[i]);\n        }\n\n    }\n\n    if (attr) {\n        for (let i in attr) {\n            e.setAttribute(i, attr[i]);\n        }\n    }\n\n    return e;\n\n}\n","let xhrHandlers = null;\n\nexport default function onXhrCompletes(handler){\n    if(null === xhrHandlers){\n        xhrHandlers = [];\n        let defaultXhr = XMLHttpRequest.prototype.open;\n\n        XMLHttpRequest.prototype.open = function() {\n            let self = this;\n            this.addEventListener(\"readystatechange\", function() {\n                if (self.readyState == XMLHttpRequest.DONE) {\n                    for(var i = 0; i < xhrHandlers.length; i++){\n                        xhrHandlers[i](self);\n                    }\n                }\n            }, false);\n            defaultXhr.apply(this, arguments);\n        }\n    }\n\n    xhrHandlers.push(handler);\n}\n","import formatDuration from './formatDuration'\nimport makeElement from './makeElement'\n\nexport default class Header{\n\n    constructor(bar){\n        var self = this;\n\n        this.bar = bar;\n        this.root = document.createElement('header');\n\n        var logo = document.createElement('div');\n        this.root.appendChild(logo);\n        logo.innerHTML = 'logo';\n\n        this.reportSelect = document.createElement('select');\n        var selectWraper = document.createElement('div');\n        selectWraper.classList.add('phpsonde-request-select');\n        selectWraper.appendChild(this.reportSelect);\n        this.root.appendChild(selectWraper);\n\n\n\n        this.reportSelect.addEventListener('change', function () {\n            bar.showReport(this.value);\n            // Report refresh is handled by bar.on('showReport', ...) see below\n        });\n\n        this.itemList = document.createElement('ul');\n        this.root.appendChild(this.itemList);\n\n\n        logo.addEventListener('click', function () {\n            self.bar.toggle();\n        });\n\n        bar.on('reportAdded', function (report) {\n            let option = new Option(report.label, bar.reports.length - 1);\n            self.reportSelect.options[self.reportSelect.options.length] = option;\n        });\n\n        bar.on('showReport', function (index) {\n            self.showReport(bar.reports[index])\n        });\n    }\n\n    showReport(report){\n        while (this.itemList.lastChild) {\n            this.itemList.removeChild(this.itemList.lastChild);\n        }\n    }\n\n\n    addPanelTab(label, panel){\n        let tab = makeElement('li', label, 'phpsonde-panel-tab');\n        this.itemList.appendChild(tab);\n\n        var self = this;\n\n        if(this.itemList.children.length === 1){\n            tab.classList.add('phpsonde-open');\n            panel.classList.add('phpsonde-open');\n        }\n\n        tab.addEventListener('click', function(){\n            var opened = self.bar.root.querySelectorAll('.phpsonde-panel-tab.phpsonde-open, .phpsonde-panel.phpsonde-open');\n\n            for(let i = 0; i < opened.length; i++){\n                opened[i].classList.remove('phpsonde-open');\n            }\n\n            tab.classList.add('phpsonde-open');\n            panel.classList.add('phpsonde-open');\n\n\n            self.bar.open();\n        });\n    }\n\n\n}\n","'use strict';\n\nconst assertValidEventName = function(eventName) {\n  if (!eventName || typeof eventName !== 'string') {\n    throw new Error('Event name should be a valid non-empty string!');\n  }\n};\n\nconst assertValidHandler = function(handler) {\n  if (typeof handler !== 'function') {\n    throw new Error('Handler should be a function!');\n  }\n};\n\nconst assertAllowedEventName = function(allowedEvents, eventName) {\n  if (allowedEvents && allowedEvents.indexOf(eventName) < 0) {\n    throw new Error(`Event \"${eventName}\" is not allowed!`);\n  }\n};\n\nconst p = Object.freeze({\n  allowedEvents: Symbol('allowedEvents'),\n  listeners: Symbol('listeners')\n});\n\nexport default class EventDispatcher {\n  constructor(allowedEvents) {\n    if (typeof allowedEvents !== 'undefined' && !Array.isArray(allowedEvents)) {\n      throw new Error('Allowed events should be a valid array of strings!');\n    }\n\n    this[p.listeners] = new Map();\n    this[p.allowedEvents] = allowedEvents;\n  }\n\n  /**\n   * Registers listener function to be executed once event occurs.\n   *\n   * @param {string} eventName Name of the event to listen for.\n   * @param {function} handler Handler to be executed once event occurs.\n   */\n  on(eventName, handler) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n    assertValidHandler(handler);\n\n    let handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      handlers = new Set();\n      this[p.listeners].set(eventName, handlers);\n    }\n\n    // Set.add ignores handler if it has been already registered.\n    handlers.add(handler);\n  }\n\n  /**\n   * Registers listener function to be executed only first time when event\n   * occurs.\n   *\n   * @param {string} eventName Name of the event to listen for.\n   * @param {function} handler Handler to be executed once event occurs.\n   */\n  once(eventName, handler) {\n    assertValidHandler(handler);\n\n    const once = (parameters) => {\n      this.off(eventName, once);\n\n      handler.call(this, parameters);\n    };\n\n    this.on(eventName, once);\n  }\n\n  /**\n   * Removes registered listener for the specified event.\n   *\n   * @param {string} eventName Name of the event to remove listener for.\n   * @param {function} handler Handler to remove, so it won't be executed\n   * next time event occurs.\n   */\n  off(eventName, handler) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n    assertValidHandler(handler);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.delete(handler);\n\n    if (!handlers.size) {\n      this[p.listeners].delete(eventName);\n    }\n  }\n\n  /**\n   * Removes all registered listeners for the specified event.\n   *\n   * @param {string=} eventName Name of the event to remove all listeners for.\n   */\n  offAll(eventName) {\n    if (typeof eventName === 'undefined') {\n      this[p.listeners].clear();\n      return;\n    }\n\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.clear();\n\n    this[p.listeners].delete(eventName);\n  }\n\n  /**\n   * Emits specified event so that all registered handlers will be called\n   * with the specified parameters.\n   *\n   * @param {string} eventName Name of the event to call handlers for.\n   * @param {Object=} parameters Optional parameters that will be passed to\n   * every registered handler.\n   */\n  emit(eventName, parameters) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.forEach((handler) => {\n      try {\n        handler.call(this, parameters);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  }\n\n  /**\n   * Checks if there are any listeners that listen for the specified event.\n   *\n   * @param {string} eventName Name of the event to check listeners for.\n   * @returns {boolean}\n   */\n  hasListeners(eventName) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    return this[p.listeners].has(eventName);\n  }\n\n  /**\n   * Mixes dispatcher methods into target object.\n   * @param {Object} target Object to mix dispatcher methods into.\n   * @param {Array.<string>?} allowedEvents Optional list of the allowed event\n   * names that can be emitted and listened for.\n   * @returns {Object} Target object with added dispatcher methods.\n   */\n  static mixin(target, allowedEvents) {\n    if (!target || typeof target !== 'object') {\n      throw new Error('Object to mix into should be valid object!');\n    }\n\n    if (typeof allowedEvents !== 'undefined' && !Array.isArray(allowedEvents)) {\n      throw new Error('Allowed events should be a valid array of strings!');\n    }\n\n    const dispatcher = new EventDispatcher(allowedEvents);\n    ['on', 'once', 'off', 'offAll', 'emit', 'hasListeners'].forEach((method) => {\n      if (typeof target[method] !== 'undefined') {\n        throw new Error(`Object to mix into already has \"${method}\" property defined!`);\n      }\n\n      if (method !== 'constructor') {\n        target[method] = dispatcher[method].bind(dispatcher);\n      }\n    }, dispatcher);\n\n    return target;\n  }\n}\n","import formatDuration from './formatDuration'\nimport makeElement from './makeElement'\n\nexport default class Timeline{\n\n    constructor(bar){\n\n        var self = this;\n\n        this.bar = bar;\n\n        this.root = makeElement('div', null, 'phpsonde-panel phpsonde-timeline-panel');\n\n        this.header = makeElement('header', 'Show ');\n        this.root.appendChild(this.header);\n\n        this.typeSelector = document.createElement('select');\n        this.header.appendChild(this.typeSelector);\n\n        this.typeSelector.addEventListener('change', function () {\n            self.filterType(this.value);\n        });\n\n        this.itemList = document.createElement('ul');\n        this.root.appendChild(this.itemList);\n\n        bar.on('showReport', function (index) {\n            self.showReport(bar.reports[index])\n        });\n\n    }\n\n    showReport(report){\n        while (this.itemList.lastChild) {\n            this.itemList.removeChild(this.itemList.lastChild);\n        }\n\n        var duration = report.data.duration;\n\n        if (!duration) {\n            // TODO: calculate duration from items\n            throw \"No valid duration for profile\"\n        }\n\n        this.bar.header.addPanelTab(formatDuration(duration), this.root);\n\n        let typeList = {};\n\n        for (let i = 0; i<report.data.profiles.length; i++) {\n            let profile = report.data.profiles[i];\n            let profileTypeName = this.bar.profileTypes.hasOwnProperty(profile.type) ? profile.type : 'default';\n            let profileType =  this.bar.profileTypes[profileTypeName];\n\n            if (!typeList.hasOwnProperty(profile.type)) {\n                typeList[profile.type] = profileType.label || profile.type;\n            }\n\n            let li = document.createElement('li');\n            li.setAttribute('data-phpsonde-type', profile.type);\n\n            let wrapper = document.createElement('div');\n            li.appendChild(wrapper);\n            wrapper.classList.add('phpsonde-summary');\n\n            // Label\n            let label = document.createElement('div');\n            label.classList.add('phpsonde-label');\n            wrapper.appendChild(label);\n            label.innerHTML = profileType.label || profile.type;\n\n            // Duration\n            let localDuration = document.createElement('div');\n            localDuration.classList.add('phpsonde-duration');\n            localDuration.innerHTML = formatDuration(profile.stop - profile.start);\n            wrapper.appendChild(localDuration);\n\n            // Timebar\n            let timeBar = document.createElement('div');\n            // Timebar wrapper\n            let timeBarWrapper = document.createElement('div');\n            timeBarWrapper.classList.add('phpsonde-timebar');\n            timeBarWrapper.appendChild(timeBar);\n            wrapper.appendChild(timeBarWrapper);\n\n            // Timebar position\n            let startPct = 100 * profile.start / duration;\n            let durationPct = 100 * (profile.stop - profile.start) / duration;\n            timeBar.style['margin-left'] = startPct + '%';\n\n            if (durationPct > 0) {\n                timeBar.style['width'] = durationPct + '%';\n            } else {\n                timeBar.style['width'] = '1px';\n            }\n\n            // Timebar color\n            if (profileType.color) {\n                timeBar.style['background-color'] = profileType.color;\n            }\n\n\n            // Unfoldable area\n            let unfoldable = document.createElement('div');\n            unfoldable.classList.add('phpsonde-details');\n            li.appendChild(unfoldable);\n\n            // Data Details\n            if (profile.data && Object.keys(profile.data).length > 0) {\n                let dataDetail = makeElement('div', null, 'phpsonde-data-details');\n                dataDetail.appendChild(makeElement('h3', 'Details'));\n                unfoldable.appendChild(dataDetail);\n\n                let table = makeElement('table');\n                dataDetail.appendChild(table);\n                for (let i in profile.data) {\n                    let row = makeElement('tr');\n                    table.appendChild(row);\n\n                    row.appendChild(makeElement('td', i));\n                    row.appendChild(makeElement('td', profile.data[i]));\n                }\n            }\n\n            // Stack trace\n            let stackTrace = document.createElement('div');\n            stackTrace.classList.add('phpsonde-stacktrace');\n            let stackTracePre = document.createElement('pre');\n            stackTracePre.innerHTML = profile.trace;\n            stackTrace.appendChild(makeElement('h3', 'Stack Trace'));\n            stackTrace.appendChild(stackTracePre);\n            unfoldable.appendChild(stackTrace);\n\n\n\n\n            // Unfold on click\n            wrapper.addEventListener('click', function () {\n                unfoldable.classList.toggle('phpsonde-open');\n            });\n\n\n            this.itemList.appendChild(li);\n        }\n\n        while (this.typeSelector.options.length) {\n            this.typeSelector.options.remove(0);\n        }\n\n        let option = new Option('All', -1);\n        this.typeSelector.options[0] = option;\n\n        for (var i in typeList) {\n            let option = new Option(typeList[i], i);\n            this.typeSelector.options[this.typeSelector.options.length] = option;\n        }\n\n    }\n\n    filterType(name){\n\n        if (name == -1) {\n            for (let i = 0; i < this.itemList.children.length; i++) {\n                this.itemList.children[i].classList.remove('phpsonde-hidden');\n            }\n        } else {\n            for (let i = 0; i < this.itemList.children.length; i++) {\n                let element = this.itemList.children[i];\n                if (element.getAttribute('data-phpsonde-type') === name) {\n                    this.itemList.children[i].classList.remove('phpsonde-hidden');\n                } else {\n                    this.itemList.children[i].classList.add('phpsonde-hidden');\n                }\n            }\n        }\n\n    }\n\n}\n","import makeElement from './makeElement'\n\nexport default class Messages{\n\n    constructor(bar){\n\n        var self = this;\n\n        this.bar = bar;\n\n        this.root = makeElement('div', '', 'phpsonde-panel phpsonde-messages-panel');\n        this.itemList = makeElement('ul');\n\n        this.root.appendChild(this.itemList);\n\n        bar.on('showReport', function (index) {\n            self.showReport(bar.reports[index])\n        });\n\n    }\n\n    showReport(report){\n        while (this.itemList.lastChild) {\n            this.itemList.removeChild(this.itemList.lastChild);\n        }\n\n\n        var messages = report.data.messages;\n\n\n        if (!messages) {\n            // TODO: calculate duration from items\n            return;\n        }\n\n        let bubbleCount = makeElement('span', messages.length, 'phpsonde-bubble');\n        this.bar.header.addPanelTab('messages ' + bubbleCount.outerHTML, this.root);\n\n        for (let i = 0; i<messages.length; i++) {\n            let message = messages[i];\n\n            let li = makeElement('li', '&rsaquo; ' +  message.text, 'bar');\n            this.itemList.appendChild(li);\n        }\n\n    }\n\n}\n","import Header from './Header'\nimport EventDispatcher from '../../node_modules/@azasypkin/event-dispatcher/bin/event-dispatcher.es2016';\nimport Timeline from './Timeline'\nimport Messages from './Messages'\nimport onXhrCompletes from './onXhrCompletes'\n\nclass Bar {\n\n    constructor(){\n\n        this.root = document.createElement('div');\n        this.root.classList.add('phpsonde');\n\n        // Header\n        this.header = new Header(this);\n        this.root.appendChild(this.header.root);\n\n        // Body\n        this.body = document.createElement('div');\n        this.body.classList.add('phpsonde-body');\n        this.root.appendChild(this.body);\n\n        // Timeline\n        this.timeline = new Timeline(this);\n        this.body.appendChild(this.timeline.root);\n\n        // Messages\n        this.messages = new Messages(this);\n        this.body.appendChild(this.messages.root);\n\n        // Add to dom\n        document.body.appendChild(this.root);\n\n        // Default values\n        this.reports = [];\n        this.profileTypes = {\n            'default': {\n                color: '#AAA'\n            }\n        };\n    }\n\n    open(){\n        this.root.classList.add('phpsonde-open');\n    }\n\n    close(){\n        this.root.classList.remove('phpsonde-open');\n    }\n\n    toggle(){\n        this.root.classList.toggle('phpsonde-open');\n    }\n\n    addProfileType(name, data){\n        this.profileTypes[name] = data;\n    }\n\n\n    addReport(label, data){\n\n        let report = {\n            label,\n            data\n        };\n\n        this.reports.push(report);\n\n        this.emit('reportAdded', report);\n\n        if (this.reports.length === 1) {\n            this.showReport(0);\n        }\n\n    }\n\n    showReport(index){\n        this.emit('showReport', index);\n    }\n\n    listenForXhrReports(){\n        var self = this;\n        onXhrCompletes(function(xhr){\n\n            let headerName = 'phpsondereport';\n\n            let report = xhr.getResponseHeader(headerName);\n\n            if(report){\n\n                let i = 1;\n                let chunk;\n                while(chunk = xhr.getResponseHeader(headerName + '-' + i)){\n                    report += chunk;\n                    i++;\n                }\n\n                try{\n                    report = atob(report);\n                    report = JSON.parse(report);\n                } catch (e){\n                    console.error('Sonde was unable to decode data fro ajax request, please see the error below'\n                        + ' and report it on https://github.com/hatcher-project/sonde/issues'\n                        + ' with as much details as possible, including your browser version');\n                    console.error(e);\n                }\n\n                if(report.reportBundle){\n                    for(let i = 0; i < report.reportBundle.length; i++){\n                        self.addReport('xhr', report.reportBundle[i]);\n                    }\n                } else {\n                    self.addReport('XHR', report);\n                }\n\n\n            }\n\n\n        });\n    }\n\n}\n\nEventDispatcher.mixin(Bar.prototype);\n\n\nexport default Bar;\n","import Bar from './Bar';\n\nexport default {\n    Bar\n};\n"]}