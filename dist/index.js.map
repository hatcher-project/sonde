{"version":3,"sources":["src/js/formatDuration.js","src/js/makeElement.js","src/js/onXhrCompletes.js","src/js/resize.js","src/js/Header.js","node_modules/@azasypkin/event-dispatcher/bin/event-dispatcher.es2016.js","src/js/Timeline.js","src/js/Messages.js","src/js/Bar.js","src/js/index.js"],"names":["formatDuration","ms","toFixed","makeElement","tag","content","classList","attr","let","e","document","createElement","innerHTML","classes","split","i","length","add","setAttribute","onXhrCompletes","handler","xhrHandlers","defaultXhr","XMLHttpRequest","prototype","open","self","this","addEventListener","readyState","DONE","apply","arguments","push","resize","bar","sizer","offset","header","root","offsetHeight","height","window","innerHeight","clientY","setHeight","stopResize","body","remove","removeEventListener","preventDefault","Header","logo","appendChild","reportSelect","selectWraper","showReport","value","itemList","toggle","on","report","option","Option","label","reports","options","index","lastChild","this$1","removeChild","addPanelTab","panel","tab","children","opened","querySelectorAll","const","assertValidEventName","eventName","Error","assertValidHandler","assertAllowedEventName","allowedEvents","indexOf","p","Object","freeze","Symbol","listeners","EventDispatcher","Array","isArray","Map","handlers","get","Set","set","once","parameters","off","call","delete","size","offAll","clear","emit","forEach","error","console","hasListeners","has","mixin","target","dispatcher","method","bind","Timeline","typeSelector","filterType","duration","data","typeList","profiles","profile","profileTypeName","profileTypes","hasOwnProperty","type","profileType","li","wrapper","localDuration","stop","start","timeBar","timeBarWrapper","startPct","durationPct","style","color","unfoldable","keys","dataDetail","table","row","stackTrace","stackTracePre","trace","i$1","name","element","getAttribute","Messages","messages","bubbleCount","outerHTML","message","text","Bar","timeline","default","localStorage","bodyheight","getItem","store","undefined","parseInt","setItem","close","contains","addProfileType","addReport","listenForXhrReports","xhr","getResponseHeader","chunk","headerName","atob","JSON","parse","reportBundle"],"mappings":"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","file":"index.js","sourcesContent":["export default function formatDuration(ms)\n{\n    if (ms < 1000) {\n        return ms  + '&micro;s';\n    } else if (ms < 1000000) {\n        return (ms / 1000).toFixed(2) + 'ms';\n    }\n    return (ms / 1000000).toFixed(2) + 's';\n}\n","export default function makeElement(tag, content, classList, attr)\n{\n\n    let e = document.createElement(tag);\n\n    if (content) {\n        e.innerHTML = content;\n    }\n\n    if (classList) {\n        let classes = classList.split(' ');\n\n        for (let i = 0; i<classes.length; i++) {\n            e.classList.add(classes[i]);\n        }\n    }\n\n    if (attr) {\n        for (let i in attr) {\n            e.setAttribute(i, attr[i]);\n        }\n    }\n\n    return e;\n\n}\n","let xhrHandlers = null;\n\nexport default function onXhrCompletes(handler)\n{\n    if (null === xhrHandlers) {\n        xhrHandlers = [];\n        let defaultXhr = XMLHttpRequest.prototype.open;\n\n        XMLHttpRequest.prototype.open = function () {\n            let self = this;\n            this.addEventListener(\"readystatechange\", function () {\n                if (self.readyState == XMLHttpRequest.DONE) {\n                    for (var i = 0; i < xhrHandlers.length; i++) {\n                        xhrHandlers[i](self);\n                    }\n                }\n            }, false);\n            defaultXhr.apply(this, arguments);\n        }\n    }\n\n    xhrHandlers.push(handler);\n}\n","/**\n * reserved for internal use\n *\n * bind for the resize bar\n *\n */\nexport default function resize(bar, sizer){\n    function resize(e){\n        let offset = bar.header.root.offsetHeight + sizer.offsetHeight;\n        let height = window.innerHeight - e.clientY - offset;\n        bar.setHeight(height);\n    }\n\n\n    function stopResize(){\n        document.body.classList.remove('phpsonde-resizing');\n        document.removeEventListener('mouseup', stopResize);\n        document.removeEventListener('mousemove', resize);\n    }\n\n    sizer.addEventListener('mousedown', function(e){\n\n        e.preventDefault();\n        document.body.classList.add('phpsonde-resizing');\n        document.addEventListener('mousemove', resize);\n        document.addEventListener('mouseup', stopResize)\n\n    });\n\n}\n","import formatDuration from './formatDuration'\nimport makeElement from './makeElement'\n\nexport default class Header{\n\n    constructor(bar){\n        var self = this;\n\n        this.bar = bar;\n        this.root = document.createElement('header');\n\n        var logo = document.createElement('div');\n        this.root.appendChild(logo);\n        logo.innerHTML = 'logo';\n\n        this.reportSelect = document.createElement('select');\n        var selectWraper = document.createElement('div');\n        selectWraper.classList.add('phpsonde-request-select');\n        selectWraper.appendChild(this.reportSelect);\n        this.root.appendChild(selectWraper);\n\n\n\n        this.reportSelect.addEventListener('change', function () {\n            bar.showReport(this.value);\n            // Report refresh is handled by bar.on('showReport', ...) see below\n        });\n\n        this.itemList = document.createElement('ul');\n        this.root.appendChild(this.itemList);\n\n\n        logo.addEventListener('click', function () {\n            self.bar.toggle();\n        });\n\n        bar.on('reportAdded', function (report) {\n            let option = new Option(report.label, bar.reports.length - 1);\n            self.reportSelect.options[self.reportSelect.options.length] = option;\n        });\n\n        bar.on('showReport', function (index) {\n            self.showReport(bar.reports[index])\n        });\n    }\n\n    showReport(report){\n        while (this.itemList.lastChild) {\n            this.itemList.removeChild(this.itemList.lastChild);\n        }\n    }\n\n\n    addPanelTab(label, panel){\n        let tab = makeElement('li', label, 'phpsonde-panel-tab');\n        this.itemList.appendChild(tab);\n\n        var self = this;\n\n        if (this.itemList.children.length === 1) {\n            tab.classList.add('phpsonde-open');\n            panel.classList.add('phpsonde-open');\n        }\n\n        tab.addEventListener('click', function () {\n            var opened = self.bar.root.querySelectorAll('.phpsonde-panel-tab.phpsonde-open, .phpsonde-panel.phpsonde-open');\n\n            for (let i = 0; i < opened.length; i++) {\n                opened[i].classList.remove('phpsonde-open');\n            }\n\n            tab.classList.add('phpsonde-open');\n            panel.classList.add('phpsonde-open');\n\n\n            self.bar.open();\n        });\n    }\n\n\n}\n","'use strict';\n\nconst assertValidEventName = function(eventName) {\n  if (!eventName || typeof eventName !== 'string') {\n    throw new Error('Event name should be a valid non-empty string!');\n  }\n};\n\nconst assertValidHandler = function(handler) {\n  if (typeof handler !== 'function') {\n    throw new Error('Handler should be a function!');\n  }\n};\n\nconst assertAllowedEventName = function(allowedEvents, eventName) {\n  if (allowedEvents && allowedEvents.indexOf(eventName) < 0) {\n    throw new Error(`Event \"${eventName}\" is not allowed!`);\n  }\n};\n\nconst p = Object.freeze({\n  allowedEvents: Symbol('allowedEvents'),\n  listeners: Symbol('listeners')\n});\n\nexport default class EventDispatcher {\n  constructor(allowedEvents) {\n    if (typeof allowedEvents !== 'undefined' && !Array.isArray(allowedEvents)) {\n      throw new Error('Allowed events should be a valid array of strings!');\n    }\n\n    this[p.listeners] = new Map();\n    this[p.allowedEvents] = allowedEvents;\n  }\n\n  /**\n   * Registers listener function to be executed once event occurs.\n   *\n   * @param {string} eventName Name of the event to listen for.\n   * @param {function} handler Handler to be executed once event occurs.\n   */\n  on(eventName, handler) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n    assertValidHandler(handler);\n\n    let handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      handlers = new Set();\n      this[p.listeners].set(eventName, handlers);\n    }\n\n    // Set.add ignores handler if it has been already registered.\n    handlers.add(handler);\n  }\n\n  /**\n   * Registers listener function to be executed only first time when event\n   * occurs.\n   *\n   * @param {string} eventName Name of the event to listen for.\n   * @param {function} handler Handler to be executed once event occurs.\n   */\n  once(eventName, handler) {\n    assertValidHandler(handler);\n\n    const once = (parameters) => {\n      this.off(eventName, once);\n\n      handler.call(this, parameters);\n    };\n\n    this.on(eventName, once);\n  }\n\n  /**\n   * Removes registered listener for the specified event.\n   *\n   * @param {string} eventName Name of the event to remove listener for.\n   * @param {function} handler Handler to remove, so it won't be executed\n   * next time event occurs.\n   */\n  off(eventName, handler) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n    assertValidHandler(handler);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.delete(handler);\n\n    if (!handlers.size) {\n      this[p.listeners].delete(eventName);\n    }\n  }\n\n  /**\n   * Removes all registered listeners for the specified event.\n   *\n   * @param {string=} eventName Name of the event to remove all listeners for.\n   */\n  offAll(eventName) {\n    if (typeof eventName === 'undefined') {\n      this[p.listeners].clear();\n      return;\n    }\n\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.clear();\n\n    this[p.listeners].delete(eventName);\n  }\n\n  /**\n   * Emits specified event so that all registered handlers will be called\n   * with the specified parameters.\n   *\n   * @param {string} eventName Name of the event to call handlers for.\n   * @param {Object=} parameters Optional parameters that will be passed to\n   * every registered handler.\n   */\n  emit(eventName, parameters) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    const handlers = this[p.listeners].get(eventName);\n    if (!handlers) {\n      return;\n    }\n\n    handlers.forEach((handler) => {\n      try {\n        handler.call(this, parameters);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  }\n\n  /**\n   * Checks if there are any listeners that listen for the specified event.\n   *\n   * @param {string} eventName Name of the event to check listeners for.\n   * @returns {boolean}\n   */\n  hasListeners(eventName) {\n    assertValidEventName(eventName);\n    assertAllowedEventName(this[p.allowedEvents], eventName);\n\n    return this[p.listeners].has(eventName);\n  }\n\n  /**\n   * Mixes dispatcher methods into target object.\n   * @param {Object} target Object to mix dispatcher methods into.\n   * @param {Array.<string>?} allowedEvents Optional list of the allowed event\n   * names that can be emitted and listened for.\n   * @returns {Object} Target object with added dispatcher methods.\n   */\n  static mixin(target, allowedEvents) {\n    if (!target || typeof target !== 'object') {\n      throw new Error('Object to mix into should be valid object!');\n    }\n\n    if (typeof allowedEvents !== 'undefined' && !Array.isArray(allowedEvents)) {\n      throw new Error('Allowed events should be a valid array of strings!');\n    }\n\n    const dispatcher = new EventDispatcher(allowedEvents);\n    ['on', 'once', 'off', 'offAll', 'emit', 'hasListeners'].forEach((method) => {\n      if (typeof target[method] !== 'undefined') {\n        throw new Error(`Object to mix into already has \"${method}\" property defined!`);\n      }\n\n      if (method !== 'constructor') {\n        target[method] = dispatcher[method].bind(dispatcher);\n      }\n    }, dispatcher);\n\n    return target;\n  }\n}\n","import formatDuration from './formatDuration'\nimport makeElement from './makeElement'\n\nexport default class Timeline{\n\n    constructor(bar){\n\n        var self = this;\n\n        this.bar = bar;\n\n        this.root = makeElement('div', null, 'phpsonde-panel phpsonde-timeline-panel');\n\n        this.header = makeElement('header', 'Show ');\n        this.root.appendChild(this.header);\n\n        this.typeSelector = document.createElement('select');\n        this.header.appendChild(this.typeSelector);\n\n        this.typeSelector.addEventListener('change', function () {\n            self.filterType(this.value);\n        });\n\n        this.itemList = document.createElement('ul');\n        this.root.appendChild(this.itemList);\n\n        bar.on('showReport', function (index) {\n            self.showReport(bar.reports[index])\n        });\n\n    }\n\n    showReport(report){\n        while (this.itemList.lastChild) {\n            this.itemList.removeChild(this.itemList.lastChild);\n        }\n\n        var duration = report.data.duration;\n\n        if (!duration) {\n            // TODO: calculate duration from items\n            throw \"No valid duration for profile\"\n        }\n\n        this.bar.header.addPanelTab(formatDuration(duration), this.root);\n\n        let typeList = {};\n\n        for (let i = 0; i<report.data.profiles.length; i++) {\n            let profile = report.data.profiles[i];\n            let profileTypeName = this.bar.profileTypes.hasOwnProperty(profile.type) ? profile.type : 'default';\n            let profileType =  this.bar.profileTypes[profileTypeName];\n\n            if (!typeList.hasOwnProperty(profile.type)) {\n                typeList[profile.type] = profileType.label || profile.type;\n            }\n\n            let li = document.createElement('li');\n            li.setAttribute('data-phpsonde-type', profile.type);\n\n            let wrapper = document.createElement('div');\n            li.appendChild(wrapper);\n            wrapper.classList.add('phpsonde-summary');\n\n            // Label\n            let label = document.createElement('div');\n            label.classList.add('phpsonde-label');\n            wrapper.appendChild(label);\n            label.innerHTML = profileType.label || profile.type;\n\n            // Duration\n            let localDuration = document.createElement('div');\n            localDuration.classList.add('phpsonde-duration');\n            localDuration.innerHTML = formatDuration(profile.stop - profile.start);\n            wrapper.appendChild(localDuration);\n\n            // Timebar\n            let timeBar = document.createElement('div');\n            // Timebar wrapper\n            let timeBarWrapper = document.createElement('div');\n            timeBarWrapper.classList.add('phpsonde-timebar');\n            timeBarWrapper.appendChild(timeBar);\n            wrapper.appendChild(timeBarWrapper);\n\n            // Timebar position\n            let startPct = 100 * profile.start / duration;\n            let durationPct = 100 * (profile.stop - profile.start) / duration;\n            timeBar.style['margin-left'] = startPct + '%';\n\n            if (durationPct > 0) {\n                timeBar.style['width'] = durationPct + '%';\n            } else {\n                timeBar.style['width'] = '1px';\n            }\n\n            // Timebar color\n            if (profileType.color) {\n                timeBar.style['background-color'] = profileType.color;\n            }\n\n\n            // Unfoldable area\n            let unfoldable = document.createElement('div');\n            unfoldable.classList.add('phpsonde-details');\n            li.appendChild(unfoldable);\n\n            // Data Details\n            if (profile.data && Object.keys(profile.data).length > 0) {\n                let dataDetail = makeElement('div', null, 'phpsonde-data-details');\n                dataDetail.appendChild(makeElement('h3', 'Details'));\n                unfoldable.appendChild(dataDetail);\n\n                let table = makeElement('table');\n                dataDetail.appendChild(table);\n                for (let i in profile.data) {\n                    let row = makeElement('tr');\n                    table.appendChild(row);\n\n                    row.appendChild(makeElement('td', i));\n                    row.appendChild(makeElement('td', profile.data[i]));\n                }\n            }\n\n            // Stack trace\n            let stackTrace = document.createElement('div');\n            stackTrace.classList.add('phpsonde-stacktrace');\n            let stackTracePre = document.createElement('pre');\n            stackTracePre.innerHTML = profile.trace;\n            stackTrace.appendChild(makeElement('h3', 'Stack Trace'));\n            stackTrace.appendChild(stackTracePre);\n            unfoldable.appendChild(stackTrace);\n\n\n\n\n            // Unfold on click\n            wrapper.addEventListener('click', function () {\n                unfoldable.classList.toggle('phpsonde-open');\n            });\n\n\n            this.itemList.appendChild(li);\n        }\n\n        while (this.typeSelector.options.length) {\n            this.typeSelector.options.remove(0);\n        }\n\n        let option = new Option('All', -1);\n        this.typeSelector.options[0] = option;\n\n        for (var i in typeList) {\n            let option = new Option(typeList[i], i);\n            this.typeSelector.options[this.typeSelector.options.length] = option;\n        }\n\n    }\n\n    filterType(name){\n\n        if (name == -1) {\n            for (let i = 0; i < this.itemList.children.length; i++) {\n                this.itemList.children[i].classList.remove('phpsonde-hidden');\n            }\n        } else {\n            for (let i = 0; i < this.itemList.children.length; i++) {\n                let element = this.itemList.children[i];\n                if (element.getAttribute('data-phpsonde-type') === name) {\n                    this.itemList.children[i].classList.remove('phpsonde-hidden');\n                } else {\n                    this.itemList.children[i].classList.add('phpsonde-hidden');\n                }\n            }\n        }\n\n    }\n\n}\n","import makeElement from './makeElement'\n\nexport default class Messages{\n\n    constructor(bar){\n\n        var self = this;\n\n        this.bar = bar;\n\n        this.root = makeElement('div', '', 'phpsonde-panel phpsonde-messages-panel');\n        this.itemList = makeElement('ul');\n\n        this.root.appendChild(this.itemList);\n\n        bar.on('showReport', function (index) {\n            self.showReport(bar.reports[index])\n        });\n\n    }\n\n    showReport(report){\n        while (this.itemList.lastChild) {\n            this.itemList.removeChild(this.itemList.lastChild);\n        }\n\n\n        var messages = report.data.messages;\n\n\n        if (!messages) {\n            // TODO: calculate duration from items\n            return;\n        }\n\n        let bubbleCount = makeElement('span', messages.length, 'phpsonde-bubble');\n        this.bar.header.addPanelTab('messages ' + bubbleCount.outerHTML, this.root);\n\n        for (let i = 0; i<messages.length; i++) {\n            let message = messages[i];\n\n            let li = makeElement('li', '&rsaquo; ' +  message.text, 'bar');\n            this.itemList.appendChild(li);\n        }\n\n    }\n\n}\n","import Header from './Header'\nimport EventDispatcher from '../../node_modules/@azasypkin/event-dispatcher/bin/event-dispatcher.es2016';\nimport Timeline from './Timeline'\nimport Messages from './Messages'\nimport onXhrCompletes from './onXhrCompletes'\nimport makeElement from './makeElement'\nimport resize from './resize'\n\nclass Bar {\n\n    constructor(){\n\n        this.root = document.createElement('div');\n        this.root.classList.add('phpsonde');\n\n        // Sizer\n        this.sizer = makeElement('div', null, 'phpsonde-sizer');\n        this.root.appendChild(this.sizer);\n\n        // Header\n        this.header = new Header(this);\n        this.root.appendChild(this.header.root);\n\n        // Body\n        this.body = document.createElement('div');\n        this.body.classList.add('phpsonde-body');\n        this.root.appendChild(this.body);\n\n        // Timeline\n        this.timeline = new Timeline(this);\n        this.body.appendChild(this.timeline.root);\n\n        // Messages\n        this.messages = new Messages(this);\n        this.body.appendChild(this.messages.root);\n\n        // Add to dom\n        document.body.appendChild(this.root);\n\n        // Default values\n        this.reports = [];\n        this.profileTypes = {\n            'default': {\n                color: '#AAA'\n            }\n        };\n\n        // Bind sizebar\n        resize(this, this.sizer);\n\n        // Initialize state\n        if(localStorage){\n            let bodyheight = localStorage.getItem('phpsonde_bodyheight');\n            if(null !== bodyheight){\n                this.setHeight(bodyheight, false);\n            }\n\n            let opened =  localStorage.getItem('phpsonde_baropened');\n            if(opened === 'true' || opened === true){\n                this.open();\n            }\n        }\n\n        let self = this;\n\n        // If window is too small, we change the size\n        window.addEventListener('resize', function(){\n            if(self.root.offsetHeight > window.innerHeight - 50){\n                self.setHeight(window.innerHeight, false);\n            }\n        });\n\n    }\n\n    setHeight(height, store){\n\n        store = store === undefined ? true : store === true;\n\n        height = parseInt(height, 10);\n\n        if(height < 0){\n            height = 10;\n        } else if (height > window.innerHeight - 50) {\n            height = window.innerHeight - 50;\n        }\n\n        this.body.style.height = height;\n\n        if(store && localStorage){\n            localStorage.setItem('phpsonde_bodyheight', this.body.style.height);\n        }\n    }\n\n    open(){\n        this.root.classList.add('phpsonde-open');\n        if(localStorage){\n            localStorage.setItem('phpsonde_baropened', true);\n        }\n    }\n\n    close(){\n        this.root.classList.remove('phpsonde-open');\n        if(localStorage){\n            localStorage.setItem('phpsonde_baropened', false);\n        }\n    }\n\n    toggle(){\n        this.root.classList.toggle('phpsonde-open');\n        if(localStorage){\n            localStorage.setItem('phpsonde_baropened', this.root.classList.contains('phpsonde-open'));\n        }\n    }\n\n    addProfileType(name, data){\n        this.profileTypes[name] = data;\n    }\n\n\n    addReport(label, data){\n\n        let report = {\n            label,\n            data\n        };\n\n        this.reports.push(report);\n\n        this.emit('reportAdded', report);\n\n        if (this.reports.length === 1) {\n            this.showReport(0);\n        }\n\n    }\n\n    showReport(index){\n        this.emit('showReport', index);\n    }\n\n    listenForXhrReports(){\n        var self = this;\n        onXhrCompletes(function (xhr) {\n\n            let headerName = 'phpsondereport';\n\n            let report = xhr.getResponseHeader(headerName);\n\n            if (report) {\n                let i = 1;\n                let chunk;\n                while (chunk = xhr.getResponseHeader(headerName + '-' + i)) {\n                    report += chunk;\n                    i++;\n                }\n\n                try {\n                    report = atob(report);\n                    report = JSON.parse(report);\n                } catch (e) {\n                    console.error('Sonde was unable to decode data fro ajax request, please see the error below'\n                        + ' and report it on https://github.com/hatcher-project/sonde/issues'\n                        + ' with as much details as possible, including your browser version');\n                    console.error(e);\n                }\n\n                if (report.reportBundle) {\n                    for (let i = 0; i < report.reportBundle.length; i++) {\n                        self.addReport('xhr', report.reportBundle[i]);\n                    }\n                } else {\n                    self.addReport('XHR', report);\n                }\n            }\n\n\n        });\n    }\n\n}\n\nEventDispatcher.mixin(Bar.prototype);\n\n\nexport default Bar;\n","import Bar from './Bar';\n\nexport default {\n    Bar\n};\n"]}